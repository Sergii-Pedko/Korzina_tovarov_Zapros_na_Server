// здесь будут РЕНДЕРИТЬСЯ Первоначальные Данные - т.е. ВЫЗЫВАТЬСЯ ПЕРВОНАЧАЛЬНЫЕ ДАННЫЕ - Проходим по всем ф-лам.js - и смотрим вызов методов, которвые описывают Вызов данных (Вырезаем оттуда и ВСтавляем сюда в Ф-цию render ) 


function render() {

// из Header.js-стр.27,31_____________________________
	const productsStore = localStorageUtil.getProducts(); // 1) Cначала берем id-Выбранных Товаров из local Storage

	headerPage.render(productsStore.length);// 2) Прописуем Кол-во Выбранных Товаров       (по id) в  <div id="header"></div> 
	// __________________________________________________

	// из Products.js-стр.134_____
	productsPage.render(); // 3) Разворачиваем Весь КАТАЛОГ ТОВАРОВ на Экран(Сайт)       в  <div id="products"></div> 
	// ___________________________
};


spinnerPage.render(); // из Spinner.js-стр.24 - ЗАПУСКАЕМ на Экран (рендерим) СПИННЕР


let CATALOG = [];
// Сюда ПО ЗАПРОСУ НА СЕРВЕР - БУДУТ ПРИХОДИТЬ ДАННЫЕ О ТОВАРАХ в виде МААСИВА-ОБЪЕКТОВ (аналогично как в ф-ле catalog.js - который в этом проекте уже не нужен) - стр. 46

// ВАЖНО!!! - let CATALOG = []; Объявлять ДО render(); - т.к.  CATALOG исспользуется внутри методов Ф-ции function render() - стр. 13 - а он прописан в Products.js-стр.68


 const fetch_Method = async() =>{ //Cтрел. Ф-ция - запись аналогично стр.29

//async function fetch_Method() { // ЗАПРОС НА СЕРВЕР - описание                   (JS-DOM.html- стр.6030) либо JS-ПРАКТИКА/JSON-fetch(URL)    
      
   var url = 'https://gist.githubusercontent.com/dev-pandaren/a3ad2d177d18402e609ec743676af80a/raw/3889c469f25c71ec11e628acdd12438742506504/guitar-catalog.json'; 


   // var url = 'server/catalog.json'; - чтобы (для примера) такой URL работал - необходимо СЭМУЛИРОВАТЬ СЕРВЕР на своем ПК - при промощи Node.js - Cмотри видео! 

   var response = await fetch(url);// простой GET-запрос, СКАЧИВАЮЩИЙ содержимое по адресу url c CЕРВЕРА.

      if (response.ok) {// если HTTP-статус в диапазоне 200-299

      console.log(` HTTP-запрос Выполнен - код статуса: ${response.status}`);

        // получаем тело ответа
        var content = await response.json(); // вернет Object!!! 
// __________________________________________________________________
// Наполняем пустой Массив стр.21 -> Полученными данными
        CATALOG = content;

// После Наполнения каталога стр.46 - ОТКЛЮЧАЕМ СПИННЕР
       spinnerPage.handleClear(); // из Spinner.js-стр.26 


// ВАЖНО!!! - только после наполнения Массива Данными (стр.46) - ВЫЗЫВАТЬ            Ф-цию render(); - которая отвечает за ВЫВОД ДАННЫХ НА ЭКРАН (и вообще за всю работу с этими полученными данными);
          render();
// ________________________________________________________________

          console.log(CATALOG); // вернет Object!!! - МАССИВ со всеми присущими ему методами (а НЕ - строку)
    
       } else {                
           console.log("Ошибка HTTP: " + response.status);

           // когда ответ с Сервера НЕ ПРИШЕЛ - ОТКЛЮЧАЕМ СПИННЕР
             spinnerPage.handleClear(); // из Spinner.js-стр.26 

            //Вывод окна Error - когда ответ с Сервера НЕ ПРИШЕЛ
             errorPage.render(); // из Error.js-стр.21 
      };
};

fetch_Method();